package notif

import (
	"context"
	"fmt"

	"github.com/nikoksr/notify"
	"github.com/nikoksr/notify/service/telegram"
	"github.com/wahyuhadi/cve-monit/models"
)

func DoNotif(items []models.NotifDetails, config models.Config) {
	if len(items) == 0 {
		return
	}

	for _, i := range items {
		// DO create func send notif
		telegramService, _ := telegram.New(config.TelegramNotif.BotKey)
		telegramService.AddReceivers(config.TelegramNotif.ID)
		notifier := notify.New()

		// Tell our notifier to use the telegram service. You can repeat the above process
		// for as many services as you like and just tell the notifier to use them.
		// Inspired by http middlewares used in higher level libraries.
		notifier.UseServices(telegramService)
		cveid := fmt.Sprintf("CVE -> %v", i.CveID)
		summary := fmt.Sprintf("Summary -> %v", i.Summary)
		score := fmt.Sprintf("Score -> %v", i.CvssScore)
		URL := fmt.Sprintf("URL -> %v", i.URL)
		message := cveid + "\n" + score + "\n" + summary + "\n" + URL
		// Send a test message.
		_ = notifier.Send(
			context.Background(),
			"Semangat pagi !!",
			message,
		)
	}
}
